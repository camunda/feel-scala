name: Backport labeled merged pull requests
on:
  pull_request:
    types: [closed]
  issue_comment:
    types: [created]
jobs:
  build:
    name: Create backport PRs
    runs-on: ubuntu-latest
    # Only run when pull request is merged
    # or when a comment starting with `/backport` is created by someone other than the
    # https://github.com/backport-action bot user (user id: 97796249). Note that if you use your
    # own PAT as `github_token`, that you should replace this id with yours.
    if: >
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.merged
      ) || (
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        github.event.comment.user.id != 97796249 &&
        startsWith(github.event.comment.body, '/backport')
      )
    steps:
      - uses: actions/checkout@v4
      - name: Create backport PRs
        uses: zeebe-io/backport-action@v3.2.0
        with:
          # Required
          # Token to authenticate requests to GitHub
          github_token: ${{ secrets.BACKPORT_ACTION_PAT }}

          # Required
          # Working directory for the backport action
          github_workspace: ${{ github.workspace }}

          # Optional
          # Regex pattern to match github labels
          # Must contain a capture group for target branchname
          # label_pattern: ^backport ([^ ]+)$

          # Optional
          # Template used as description in the pull requests created by this action.
          # Placeholders can be used to define variable values.
          # These are indicated by a dollar sign and curly braces (`${placeholder}`).
          # Please refer to this action's README for all available placeholders.
          pull_description: |-
            # Description
            Backport of #${pull_number} to `${target_branch}`.
            
            relates to ${issue_refs}
            original author: @${pull_author}

          # Optional
          # Specifies how the action will handle a conflict occurring during the cherry-pick. 
          # In all cases, the action will stop the cherry-pick at the first conflict encountered.
          # When set to draft_commit_conflicts the backport will always create a draft pull request 
          # with the first conflict encountered committed.
          conflict_resolution: draft_commit_conflicts
